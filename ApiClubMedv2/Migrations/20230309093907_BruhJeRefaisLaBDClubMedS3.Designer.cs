// <auto-generated />
using System;
using ApiClubMedv2.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiClubMedv2.Migrations
{
    [DbContext(typeof(ClubMedDbContext))]
    [Migration("20230309093907_BruhJeRefaisLaBDClubMedS3")]
    partial class BruhJeRefaisLaBDClubMedS3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("clb_description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clb_email");

                    b.Property<int?>("IdDomaineSkiable")
                        .IsRequired()
                        .HasColumnType("integer")
                        .HasColumnName("clb_iddomaineskiable");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric(14,11)")
                        .HasColumnName("clb_latitude");

                    b.Property<string>("LienPDF")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clb_lienpdf");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric(14,11)")
                        .HasColumnName("clb_longitude");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clb_nom");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdDomaineSkiable");

                    b.ToTable("t_e_club_clb", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dsk_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("dsk_description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dsk_nom");

                    b.Property<string>("NomStation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dsk_nomstation");

                    b.HasKey("Id");

                    b.ToTable("t_e_domaineskiable_dsk", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Club", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", "Domaine")
                        .WithMany("Clubs")
                        .HasForeignKey("IdDomaineSkiable")
                        .IsRequired()
                        .HasConstraintName("fk_clb_dsk");

                    b.Navigation("Domaine");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Navigation("Clubs");
                });
#pragma warning restore 612, 618
        }
    }
}
