// <auto-generated />
using System;
using ApiClubMedv2.Models.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiClubMedv2.Migrations
{
    [DbContext(typeof(ClubMedDbContext))]
    [Migration("20230404081552_ModifsTableLoginWorkingFINALLY")]
    partial class ModifsTableLoginWorkingFINALLY
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Activite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("act_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgeMin")
                        .HasColumnType("integer")
                        .HasColumnName("act_agemin");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("act_description");

                    b.Property<string>("Duree")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("act_duree");

                    b.Property<bool>("EstIncluse")
                        .HasColumnType("boolean")
                        .HasColumnName("act_estincluse");

                    b.Property<string>("Frequence")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("act_frequence");

                    b.Property<int>("IdTypeActivite")
                        .HasColumnType("integer")
                        .HasColumnName("act_idtypeactivite");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("act_nom");

                    b.Property<decimal?>("Prix")
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("act_prix");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeActivite");

                    b.ToTable("t_e_activite_act", "clubmed");

                    b.HasCheckConstraint("ck_act_agemin", "act_agemin >= 0");

                    b.HasCheckConstraint("ck_act_prix", "act_prix >= 0");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ActiviteMultimedia", b =>
                {
                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("atm_idtypecaracteristique");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("atm_idmultimedia");

                    b.HasKey("IdActivite", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_activitemultimedia_atm", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Avis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("avi_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .HasColumnType("text")
                        .HasColumnName("avi_commentaire");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("avi_dateenvoi");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("avi_idclient");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("avi_idclub");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("avi_note");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.ToTable("t_e_avis_avi", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.AvisMultimedia", b =>
                {
                    b.Property<int>("IdAvis")
                        .HasColumnType("integer")
                        .HasColumnName("amt_idavis");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("amt_idmultimedia");

                    b.HasKey("IdAvis", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_avismultimedia_amt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Bar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("res_description");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("res_idclub");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("res_nom");

                    b.HasKey("Id");

                    b.HasIndex("IdClub");

                    b.ToTable("t_e_bar_bar", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.BarMultimedia", b =>
                {
                    b.Property<int>("IdBar")
                        .HasColumnType("integer")
                        .HasColumnName("bmt_idbar");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("bmt_idmultimedia");

                    b.HasKey("IdBar", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_barmultimedia_bmt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctq_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTypeCaracteristique")
                        .HasColumnType("integer")
                        .HasColumnName("ctq_idtypecaracteristique");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ctq_nom");

                    b.HasKey("Id");

                    b.HasIndex("IdTypeCaracteristique");

                    b.ToTable("t_e_caracteristique_ctq", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.CaracteristiqueMultimedia", b =>
                {
                    b.Property<int>("IdCaracteristique")
                        .HasColumnType("integer")
                        .HasColumnName("cmt_idcaracteristique");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("cmt_idmultimedia");

                    b.HasKey("IdCaracteristique", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_caracteristiquemultimedia_cmt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clt_idclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdClient"));

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("clt_datenaissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clt_email");

                    b.Property<string>("GenreClient")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("char(10)")
                        .HasColumnName("clt_genreclient");

                    b.Property<int>("IdCodePostal")
                        .HasColumnType("integer")
                        .HasColumnName("clt_idcodepostal");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("char(10)")
                        .HasColumnName("clt_mobile");

                    b.Property<string>("NomClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("clt_nomclient");

                    b.Property<string>("NomRue")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clt_nomrue");

                    b.Property<string>("NumeroRue")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("clt_numrue");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("clt_password");

                    b.Property<string>("PrenomClient")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("clt_prenomclient");

                    b.Property<string>("UserRole")
                        .HasColumnType("text");

                    b.HasKey("IdClient");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdCodePostal");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.ToTable("t_e_client_clt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("clb_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("clb_description");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clb_email");

                    b.Property<int?>("IdDomaineSkiable")
                        .HasColumnType("integer")
                        .HasColumnName("clb_iddomaineskiable");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric(14,11)")
                        .HasColumnName("clb_latitude");

                    b.Property<string>("LienPDF")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("clb_lienpdf");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric(14,11)")
                        .HasColumnName("clb_longitude");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("clb_nom");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdDomaineSkiable");

                    b.ToTable("t_e_club_clb", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubActivite", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cac_idclub");

                    b.Property<int>("IdActivite")
                        .HasColumnType("integer")
                        .HasColumnName("cac_idactivite");

                    b.HasKey("IdClub", "IdActivite");

                    b.HasIndex("IdActivite");

                    b.ToTable("t_j_clubactivite_cac", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubActiviteEnfant", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cae_idclub");

                    b.Property<int>("IdActiviteEnfant")
                        .HasColumnType("integer")
                        .HasColumnName("cae_idactiviteenfant");

                    b.HasKey("IdClub", "IdActiviteEnfant");

                    b.ToTable("t_j_clubactiviteenfant_cae", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubCaracteristique", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cct_idclub");

                    b.Property<int>("IdCaracteristique")
                        .HasColumnType("integer")
                        .HasColumnName("cct_idcaracteristique");

                    b.HasKey("IdClub", "IdCaracteristique");

                    b.HasIndex("IdCaracteristique");

                    b.ToTable("t_j_clubcaracteristique_cct", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubMultimedia", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cmt_idclub");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("cmt_idmultimedia");

                    b.HasKey("IdClub", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_clubmultimedia_cmt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubPaysLocalisation", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cps_idclub");

                    b.Property<int>("IdPays")
                        .HasColumnType("integer")
                        .HasColumnName("cps_idpays");

                    b.Property<int>("IdLocalisation")
                        .HasColumnType("integer")
                        .HasColumnName("cps_idlocalisation");

                    b.HasKey("IdClub", "IdPays", "IdLocalisation");

                    b.HasIndex("IdLocalisation");

                    b.HasIndex("IdPays");

                    b.ToTable("t_j_clubpayslocalisation_cps", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTransport", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("ctr_idclub");

                    b.Property<int>("IdTransport")
                        .HasColumnType("integer")
                        .HasColumnName("ctr_idtransport");

                    b.HasKey("IdClub", "IdTransport");

                    b.HasIndex("IdTransport");

                    b.ToTable("t_j_clubtransport_ctr", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTypeChambre", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("cth_idclub");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("cth_idtypechambre");

                    b.HasKey("IdClub", "IdTypeChambre");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_j_clubtypechambre_cth", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTypeClub", b =>
                {
                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("ctc_idclub");

                    b.Property<int>("IdTypeClub")
                        .HasColumnType("integer")
                        .HasColumnName("ctc_idtypeclub");

                    b.HasKey("IdClub", "IdTypeClub");

                    b.HasIndex("IdTypeClub");

                    b.ToTable("t_j_clubtypeclub_ctc", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.CodePostal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cpl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("cpl_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_codepostal_cpl", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Cookie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cok_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("cok_description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("cok_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_cookie_cok", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineMultimedia", b =>
                {
                    b.Property<int>("IdDomaineSkiable")
                        .HasColumnType("integer")
                        .HasColumnName("dmt_iddomaineskiable");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("dmt_idmultimedia");

                    b.HasKey("IdDomaineSkiable", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_domainemultimedia_dmt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("dsk_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AltitudeBasse")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dsk_altitudebasse");

                    b.Property<decimal?>("AltitudeHaute")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("dsk_altitudehaute");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("dsk_description");

                    b.Property<string>("InfoSki")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("dsk_infoski");

                    b.Property<decimal?>("LongeurPistes")
                        .HasColumnType("numeric(3,0)")
                        .HasColumnName("dsk_longueurpistes");

                    b.Property<decimal?>("NbPistes")
                        .HasColumnType("numeric(3,0)")
                        .HasColumnName("dsk_nbpistes");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dsk_nom");

                    b.Property<string>("NomStation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("dsk_nomstation");

                    b.HasKey("Id");

                    b.ToTable("t_e_domaineskiable_dsk", "clubmed");

                    b.HasCheckConstraint("ck_dsk_altbasse_althaute", "dsk_altitudebasse > 0 and dsk_altitudehaute > dsk_altitudebasse");

                    b.HasCheckConstraint("ck_dsk_longueurpistes", "dsk_longueurpistes > 0");

                    b.HasCheckConstraint("ck_dsk_nombrepistes", "dsk_nbpistes > 0");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Localisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("loc_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("loc_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_localisation_loc", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Multimedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("mtm_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("mtm_description");

                    b.Property<string>("Lien")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("mtm_lien");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("mtm_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_multimedia_mtm", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Pays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pay_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("pay_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_pays_pay", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.PaysLocalisation", b =>
                {
                    b.Property<int>("IdPays")
                        .HasColumnType("integer")
                        .HasColumnName("pal_idpays");

                    b.Property<int>("IdLocalisation")
                        .HasColumnType("integer")
                        .HasColumnName("pal_idlocalisation");

                    b.HasKey("IdPays", "IdLocalisation");

                    b.HasIndex("IdLocalisation");

                    b.ToTable("t_j_payslocalisation_pal", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("rea_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("rea_date");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("date")
                        .HasColumnName("rea_datedebut");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("date")
                        .HasColumnName("rea_datefin");

                    b.Property<int>("IdClient")
                        .HasColumnType("integer")
                        .HasColumnName("rea_idclient");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("rea_idclub");

                    b.Property<int?>("IdTransport")
                        .HasColumnType("integer")
                        .HasColumnName("rea_idtransport");

                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("rea_idtypechambre");

                    b.HasKey("Id");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdClub");

                    b.HasIndex("IdTransport");

                    b.HasIndex("IdTypeChambre");

                    b.ToTable("t_e_reservation_rea", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("res_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("res_description");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("res_idclub");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("res_nom");

                    b.HasKey("Id");

                    b.HasIndex("IdClub");

                    b.ToTable("t_e_restaurant_ret", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.RestaurantMultimedia", b =>
                {
                    b.Property<int>("IdRestaurant")
                        .HasColumnType("integer")
                        .HasColumnName("rmt_idrestaurant");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("rmt_idmultimedia");

                    b.HasKey("IdRestaurant", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_restaurantmultimedia_rmt", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Transport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("trp_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("trp_nom");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("trp_prix");

                    b.HasKey("Id");

                    b.ToTable("t_e_transport_trp", "clubmed");

                    b.HasCheckConstraint("ck_trp_prix", "trp_prix > 0");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tac_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("tac_description");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("tac_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_typeactivite_tac", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeActiviteMultimedia", b =>
                {
                    b.Property<int>("IdTypeActivite")
                        .HasColumnType("integer")
                        .HasColumnName("tam_idtypeactivite");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("tam_idmultimedia");

                    b.HasKey("IdTypeActivite", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_typeactivitemultimedia_tam", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeCaracteristique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ctq_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("ctq_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_typecaracteristique_tct", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeCaracteristiqueMultimedia", b =>
                {
                    b.Property<int>("IdTypeCaracteristique")
                        .HasColumnType("integer")
                        .HasColumnName("tcm_idtypecaracteristique");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("tcm_idmultimedia");

                    b.HasKey("IdTypeCaracteristique", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_typecaracteristiquemultimedia_tcm", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeChambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tch_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("tch_description");

                    b.Property<int>("IdClub")
                        .HasColumnType("integer")
                        .HasColumnName("tch_idclub");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("tch_nom");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric(7,2)")
                        .HasColumnName("tch_prix");

                    b.Property<string>("Surface")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tch_surface");

                    b.HasKey("Id");

                    b.ToTable("t_e_typechambre_tch", "clubmed");

                    b.HasCheckConstraint("ck_tch_prix", "tch_prix > 0");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeChambreMultimedia", b =>
                {
                    b.Property<int>("IdTypeChambre")
                        .HasColumnType("integer")
                        .HasColumnName("thm_idtypechambre");

                    b.Property<int>("IdMultimedia")
                        .HasColumnType("integer")
                        .HasColumnName("thm_idmultimedia");

                    b.HasKey("IdTypeChambre", "IdMultimedia");

                    b.HasIndex("IdMultimedia");

                    b.ToTable("t_j_typechambremultimedia_thm", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeClub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("tcl_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("tcl_nom");

                    b.HasKey("Id");

                    b.ToTable("t_e_typeclub_tcl", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Ville", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("vil_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPays")
                        .HasColumnType("integer")
                        .HasColumnName("vil_idpays");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("vil_nom");

                    b.HasKey("Id");

                    b.HasIndex("IdPays");

                    b.ToTable("t_e_ville_vil", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.VilleCodePostal", b =>
                {
                    b.Property<int>("IdVille")
                        .HasColumnType("integer")
                        .HasColumnName("vcp_idville");

                    b.Property<int>("IdCodePostal")
                        .HasColumnType("integer")
                        .HasColumnName("vcp_idcodepostal");

                    b.HasKey("IdVille", "IdCodePostal");

                    b.HasIndex("IdCodePostal");

                    b.ToTable("t_j_villecodepostal_vcp", "clubmed");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ActiviteEnfant", b =>
                {
                    b.HasBaseType("ApiClubMedv2.Models.EntityFramework.Activite");

                    b.Property<decimal>("AgeMax")
                        .HasColumnType("numeric(4,2)")
                        .HasColumnName("ace_agemax");

                    b.ToTable("t_e_activiteenfant_ace", "clubmed");

                    b.HasCheckConstraint("ck_act_agemin", "act_agemin >= 0");

                    b.HasCheckConstraint("ck_act_prix", "act_prix >= 0");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Activite", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeActivite", "TypeActivite")
                        .WithMany("Activites")
                        .HasForeignKey("IdTypeActivite")
                        .IsRequired()
                        .HasConstraintName("fk_act_tac");

                    b.Navigation("TypeActivite");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ActiviteMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Activite", "Activite")
                        .WithMany("ActiviteMultimedias")
                        .HasForeignKey("IdActivite")
                        .IsRequired()
                        .HasConstraintName("fk_act_atm");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("ActiviteMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_atm");

                    b.Navigation("Activite");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Avis", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("Avis")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clb_avi");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Client", "Client")
                        .WithMany("Avis")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clt_avi");

                    b.Navigation("Client");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.AvisMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Avis", "Avis")
                        .WithMany("AvisMultimedias")
                        .HasForeignKey("IdAvis")
                        .IsRequired()
                        .HasConstraintName("fk_avi_amt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("AvisMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mtm_amt");

                    b.Navigation("Avis");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Bar", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("Bars")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_bar");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.BarMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Bar", "Bar")
                        .WithMany("BarMultimedias")
                        .HasForeignKey("IdBar")
                        .IsRequired()
                        .HasConstraintName("fk_bar_bmt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("BarMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_bmt");

                    b.Navigation("Bar");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Caracteristique", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeCaracteristique", "TypeCaracteristique")
                        .WithMany("Caracteristiques")
                        .HasForeignKey("IdTypeCaracteristique")
                        .IsRequired()
                        .HasConstraintName("fk_ctq_tct");

                    b.Navigation("TypeCaracteristique");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.CaracteristiqueMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Caracteristique", "Caracteristique")
                        .WithMany("CaracteristiqueMultimedias")
                        .HasForeignKey("IdCaracteristique")
                        .IsRequired()
                        .HasConstraintName("fk_tct_cmt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("CaracteristiqueMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_cmt");

                    b.Navigation("Caracteristique");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Client", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.CodePostal", "CodePostalClient")
                        .WithMany("CodePostalDesClients")
                        .HasForeignKey("IdCodePostal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodePostalClient");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Club", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", "Domaine")
                        .WithMany("Clubs")
                        .HasForeignKey("IdDomaineSkiable")
                        .HasConstraintName("fk_clb_dsk");

                    b.Navigation("Domaine");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubActivite", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Activite", "Activite")
                        .WithMany("ClubActivites")
                        .HasForeignKey("IdActivite")
                        .IsRequired()
                        .HasConstraintName("fk_act_cac");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubActivites")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cac");

                    b.Navigation("Activite");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubActiviteEnfant", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubActivitesEnfant")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cae");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubCaracteristique", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Caracteristique", "Caracteristique")
                        .WithMany("ClubCaracteristiques")
                        .HasForeignKey("IdCaracteristique")
                        .IsRequired()
                        .HasConstraintName("fk_ctq_cct");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubCaracteristiques")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cct");

                    b.Navigation("Caracteristique");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubMultimedias")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cmt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("ClubMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mtm_cmt");

                    b.Navigation("Club");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubPaysLocalisation", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubPaysLocalisations")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cps");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Localisation", "Localisation")
                        .WithMany("ClubPaysLocalisations")
                        .HasForeignKey("IdLocalisation")
                        .IsRequired()
                        .HasConstraintName("fk_loc_cps");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Pays", "Pays")
                        .WithMany("ClubPaysLocalisations")
                        .HasForeignKey("IdPays")
                        .IsRequired()
                        .HasConstraintName("fk_pay_cps");

                    b.Navigation("Club");

                    b.Navigation("Localisation");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTransport", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubTransports")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_ctr");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Transport", "Transport")
                        .WithMany("ClubTransports")
                        .HasForeignKey("IdTransport")
                        .IsRequired()
                        .HasConstraintName("fk_cmb_ctr");

                    b.Navigation("Club");

                    b.Navigation("Transport");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTypeChambre", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubTypesChambre")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_cth");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeChambre", "TypeChambre")
                        .WithMany("ClubTypesChambre")
                        .HasForeignKey("IdTypeChambre")
                        .IsRequired()
                        .HasConstraintName("fk_tch_cth");

                    b.Navigation("Club");

                    b.Navigation("TypeChambre");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ClubTypeClub", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("ClubTypesClub")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_ctc");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeClub", "TypeClub")
                        .WithMany("ClubTypesClub")
                        .HasForeignKey("IdTypeClub")
                        .IsRequired()
                        .HasConstraintName("fk_tcl_ctc");

                    b.Navigation("Club");

                    b.Navigation("TypeClub");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", "Domaine")
                        .WithMany("DomaineMultimedias")
                        .HasForeignKey("IdDomaineSkiable")
                        .IsRequired()
                        .HasConstraintName("fk_tct_dmt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("DomaineMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_dmt");

                    b.Navigation("Domaine");

                    b.Navigation("Multimedia");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.PaysLocalisation", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Localisation", "Localisation")
                        .WithMany("PaysLocalisation")
                        .HasForeignKey("IdLocalisation")
                        .IsRequired()
                        .HasConstraintName("fk_loc_pal");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Pays", "Pays")
                        .WithMany("PaysLocalisations")
                        .HasForeignKey("IdPays")
                        .IsRequired()
                        .HasConstraintName("fk_pay_pal");

                    b.Navigation("Localisation");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Reservation", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("fk_clt_rea");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("Reservations")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_rea");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Transport", "Transport")
                        .WithMany("Reservations")
                        .HasForeignKey("IdTransport")
                        .HasConstraintName("fk_trp_rea");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeChambre", "TypeChambre")
                        .WithMany("Reservations")
                        .HasForeignKey("IdTypeChambre")
                        .IsRequired()
                        .HasConstraintName("fk_tch_rea");

                    b.Navigation("Client");

                    b.Navigation("Club");

                    b.Navigation("Transport");

                    b.Navigation("TypeChambre");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Restaurant", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Club", "Club")
                        .WithMany("Restaurants")
                        .HasForeignKey("IdClub")
                        .IsRequired()
                        .HasConstraintName("fk_clb_ret");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.RestaurantMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("RestaurantMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_rmt");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Restaurant", "Restaurant")
                        .WithMany("RestaurantMultimedias")
                        .HasForeignKey("IdRestaurant")
                        .IsRequired()
                        .HasConstraintName("fk_ret_rmt");

                    b.Navigation("Multimedia");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeActiviteMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("TypeActiviteMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_tam");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeActivite", "TypeActivite")
                        .WithMany("TypeActiviteMultimedias")
                        .HasForeignKey("IdTypeActivite")
                        .IsRequired()
                        .HasConstraintName("fk_tac_tam");

                    b.Navigation("Multimedia");

                    b.Navigation("TypeActivite");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeCaracteristiqueMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("TypeCaracteristiqueMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_tcm");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeCaracteristique", "TypeCaracteristique")
                        .WithMany("TypeCaracteristiqueMultimedias")
                        .HasForeignKey("IdTypeCaracteristique")
                        .IsRequired()
                        .HasConstraintName("fk_tct_tcm");

                    b.Navigation("Multimedia");

                    b.Navigation("TypeCaracteristique");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeChambreMultimedia", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Multimedia", "Multimedia")
                        .WithMany("TypeChambreMultimedias")
                        .HasForeignKey("IdMultimedia")
                        .IsRequired()
                        .HasConstraintName("fk_mlm_thm");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.TypeChambre", "TypeChambre")
                        .WithMany("TypeChambreMultimedias")
                        .HasForeignKey("IdTypeChambre")
                        .IsRequired()
                        .HasConstraintName("fk_tch_thm");

                    b.Navigation("Multimedia");

                    b.Navigation("TypeChambre");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Ville", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Pays", "Pays")
                        .WithMany("Villes")
                        .HasForeignKey("IdPays")
                        .IsRequired()
                        .HasConstraintName("fk_pay_vil");

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.VilleCodePostal", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.CodePostal", "CodePostal")
                        .WithMany("VilleCodesPostaux")
                        .HasForeignKey("IdCodePostal")
                        .IsRequired()
                        .HasConstraintName("fk_cpl_vcp");

                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Ville", "Ville")
                        .WithMany("VilleCodesPostaux")
                        .HasForeignKey("IdVille")
                        .IsRequired()
                        .HasConstraintName("fk_vil_vcp");

                    b.Navigation("CodePostal");

                    b.Navigation("Ville");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.ActiviteEnfant", b =>
                {
                    b.HasOne("ApiClubMedv2.Models.EntityFramework.Activite", "Activite")
                        .WithOne("ActiviteEnfant")
                        .HasForeignKey("ApiClubMedv2.Models.EntityFramework.ActiviteEnfant", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_act_ace");

                    b.Navigation("Activite");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Activite", b =>
                {
                    b.Navigation("ActiviteEnfant");

                    b.Navigation("ActiviteMultimedias");

                    b.Navigation("ClubActivites");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Avis", b =>
                {
                    b.Navigation("AvisMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Bar", b =>
                {
                    b.Navigation("BarMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Caracteristique", b =>
                {
                    b.Navigation("CaracteristiqueMultimedias");

                    b.Navigation("ClubCaracteristiques");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Client", b =>
                {
                    b.Navigation("Avis");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Club", b =>
                {
                    b.Navigation("Avis");

                    b.Navigation("Bars");

                    b.Navigation("ClubActivites");

                    b.Navigation("ClubActivitesEnfant");

                    b.Navigation("ClubCaracteristiques");

                    b.Navigation("ClubMultimedias");

                    b.Navigation("ClubPaysLocalisations");

                    b.Navigation("ClubTransports");

                    b.Navigation("ClubTypesChambre");

                    b.Navigation("ClubTypesClub");

                    b.Navigation("Reservations");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.CodePostal", b =>
                {
                    b.Navigation("CodePostalDesClients");

                    b.Navigation("VilleCodesPostaux");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.DomaineSkiable", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("DomaineMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Localisation", b =>
                {
                    b.Navigation("ClubPaysLocalisations");

                    b.Navigation("PaysLocalisation");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Multimedia", b =>
                {
                    b.Navigation("ActiviteMultimedias");

                    b.Navigation("AvisMultimedias");

                    b.Navigation("BarMultimedias");

                    b.Navigation("CaracteristiqueMultimedias");

                    b.Navigation("ClubMultimedias");

                    b.Navigation("DomaineMultimedias");

                    b.Navigation("RestaurantMultimedias");

                    b.Navigation("TypeActiviteMultimedias");

                    b.Navigation("TypeCaracteristiqueMultimedias");

                    b.Navigation("TypeChambreMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Pays", b =>
                {
                    b.Navigation("ClubPaysLocalisations");

                    b.Navigation("PaysLocalisations");

                    b.Navigation("Villes");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Restaurant", b =>
                {
                    b.Navigation("RestaurantMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Transport", b =>
                {
                    b.Navigation("ClubTransports");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeActivite", b =>
                {
                    b.Navigation("Activites");

                    b.Navigation("TypeActiviteMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeCaracteristique", b =>
                {
                    b.Navigation("Caracteristiques");

                    b.Navigation("TypeCaracteristiqueMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeChambre", b =>
                {
                    b.Navigation("ClubTypesChambre");

                    b.Navigation("Reservations");

                    b.Navigation("TypeChambreMultimedias");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.TypeClub", b =>
                {
                    b.Navigation("ClubTypesClub");
                });

            modelBuilder.Entity("ApiClubMedv2.Models.EntityFramework.Ville", b =>
                {
                    b.Navigation("VilleCodesPostaux");
                });
#pragma warning restore 612, 618
        }
    }
}
